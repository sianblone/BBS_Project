<?xml version="1.0" encoding="UTF-8"?>
<configuration scan="true" scanPeriod="30 seconds">
	<property name="LOG_PATH" value="./logback/" />
	
	<!-- log를 표시할 때 사용할 패턴 설정 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>%d{HH:mm:ss.SSS} %-5level %logger{36} - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender name="ROLLING" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${LOG_PATH}/logback.log</file>
        <encoder>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
        	<!--
        		filaNamePattern에 %d{yyyy-MM/dd_HH-mmss} 등 DateTime 형식을 넣어주면
        		해당 기간이 지나고 새로 로그를 저장하게 될 때 위에서 지정한 기본 로그 파일을 나눠서 새 파일에 저장하게 된다 
        		%d에 DateTime 형식을 지정하지 않으면 기본적으로 %d{yyyy-MM-dd}가 된다
        		
        		%d{}를 저장 단위로 쓰고싶지 않은 경우
        		log/%d{yyyy/MM, aux}/logback.%d{yyyy-MM-dd}.log 처럼 매개변수로 aux를 붙여주면 된다
        		파일명 뒤에 .zip이나 .gz를 붙이면 자동으로 압축된다
        	-->
            <fileNamePattern>${LOG_PATH}/logback.%d{yyyy-MM-dd}.log</fileNamePattern>
            
			<!-- 최대 로그 파일 크기 설정 / 단위는 KB,MB,GB 지정하지 않으면 Byte / 기본값 10MB -->
			<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
				<maxFileSize>10MB</maxFileSize>
			</triggeringPolicy>
			
            <!-- 최대 파일 개수 (Ex. 파일명의 DataTime 패턴을 일 단위로 저장하면 최소 30일간, 월 단위로 저장하면 최소 30개월간 저장하게 된다) -->
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

	<!-- logback level FATAL > ERROR > WARN > INFO > DEBUG > TRACE
		Ex. level을 INFO로 설정한 경우 : INFO레벨 이하의 메시지는 모두 무시(DEBUG, TRACE 무시)
		참고로 log.debug는 DEBUG 레벨이므로 INFO 이상으로 설정 시 콘솔에 보이지 않는다.
		
		① FATAL : 아주 심각한 에러가 발생한 상태, 시스템적으로 심각한 문제가 발생해서 어플리케이션 작동이 불가능할 경우
		② ERROR : 요청을 처리하는 중 문제가 발생한 경우
		③ WARN : 처리 가능한 문제이지만, 향후 시스템 에러의 원인이 될 수 있는 경고성 메시지
		④ INFO : 로그인, 상태변경과 같은 정보성 메시지
		⑤ DEBUG : 개발시 디버그 용도로 사용한 메시지
		⑥ TRACE : 서 좀 더 상세한 메세지
	-->
	
	<logger name="org.springframework" additivity="false" level="INFO">
		<appender-ref ref="ROLLING" />
	</logger>
	
	<logger name="org.mybatis" additivity="false" level="INFO">
		<appender-ref ref="CONSOLE" />
	</logger>
	
	<logger name="com.sif.community.controller" additivity="false" level="DEBUG">
		<appender-ref ref="ROLLING" />
	</logger>

	<logger name="com.sif.community.service" additivity="false" level="DEBUG">
		<appender-ref ref="CONSOLE" />
	</logger>
	
	<logger name="com.sif.community.dao" additivity="false" level="DEBUG">
		<appender-ref ref="CONSOLE" />
	</logger>
	
	<logger name="org.springframework.web" additivity="false" level="DEBUG">
		<appender-ref ref="ROLLING"/>
	</logger>
	
    <logger name="org.Apache" additivity="false" level="DEBUG">
    	<appender-ref ref="ROLLING"/>
    </logger>

	<root level="INFO">
		<appender-ref ref="CONSOLE" />
	</root>
</configuration>