<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sif.community.dao.BoardDao">
	<!--
	1. tbl_board의 모든 칼럼 가져오기
	2. tbl_board_info의 bi_name은 VO에 만들어 둔 board_name에 매핑
	3. tbl_users의 nickname은 VO에 만들어 둔 board_nickname에 매핑
	4. b.board_info = bi.bi_id + b.board_writer = u.username 조인
	5. WHERE 조건으로 결과 가져오기
	6. 관리자 확인
	7. 검색옵션, 검색값 확인
	7-1. 닉네임으로 검색 시 ID List 가져와서 매개변수에 전달, 작성자 검색
	8. 그룹으로 정렬 : 1. board_group > 2. board_order
	-->
	<select id="countAll" resultType="long">
		SELECT COUNT(*)
		FROM tbl_board
		WHERE
			board_info = #{boardVO.board_info}
			<if test="!isAdmin">
				AND board_delete = 0
			</if>
			<if test="boardVO.search_txt != null and !boardVO.search_txt.trim().equals('')">
				<if test="boardVO.search_type.equals('subject')">
					AND board_subject LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('content')">
					AND board_content LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('writer')">
					AND board_writer LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('sc')">
					AND board_subject LIKE CONCAT('%', #{boardVO.search_txt}, '%') OR board_content LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
			</if>
			<if test="usernameList != null">
				<foreach collection="usernameList" item="userVO">
					AND board_writer = #{userVO.username}
				</foreach>
			</if>
	</select>
	
	<select id="selectAllByPage" resultType="boardVO">
		SELECT
			b.board_no, b.board_p_no, b.board_group, b.board_order, b.board_depth, b.board_info, b.board_writer, b.board_datetime, b.board_subject, b.board_content,
			u.nickname AS board_nickname, bi.bi_name AS board_name
		FROM tbl_board b
		LEFT JOIN tbl_board_info bi
		ON
			b.board_info = bi.bi_id
		LEFT JOIN tbl_users u
		ON
			b.board_writer = u.username
		WHERE
			b.board_info = #{boardVO.board_info}
			<if test="!isAdmin">
				AND b.board_delete = 0
			</if>
			<if test="boardVO.search_txt != null and !boardVO.search_txt.trim().equals('')">
				<if test="boardVO.search_type.equals('subject')">
					AND board_subject LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('content')">
					AND board_content LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('writer')">
					AND board_writer LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
				<if test="boardVO.search_type.equals('sc')">
					AND board_subject LIKE CONCAT('%', #{boardVO.search_txt}, '%') OR board_content LIKE CONCAT('%', #{boardVO.search_txt}, '%')
				</if>
			</if>
			<if test="usernameList != null">
				<foreach collection="usernameList" item="userVO">
					AND board_writer = #{userVO.username}
				</foreach>
			</if>
		ORDER BY b.board_group DESC, b.board_order ASC
		LIMIT #{pageVO.limit} OFFSET #{pageVO.offset}
	</select>
	
	<select id="findByBoardNo" resultType="boardVO">
		SELECT b.*, u.nickname AS board_nickname
		FROM tbl_board b, tbl_users u
		WHERE
			board_no = #{board_no}
			AND
			b.board_writer = u.username
	</select>
	
	<select id="selectMainPage" resultMap="selectMainPageRM">
		SELECT *
		FROM tbl_board_info
	</select>
	<resultMap id="selectMainPageRM" type="boardInfoVO">
		<id property="bi_id" column="bi_id"/>
		<collection property="bi_board_list" column="bi_id" ofType="boardVO" select="selectMainPageBoard"/>
	</resultMap>
	<select id="selectMainPageBoard" resultType="boardVO">
		SELECT
			b.board_no, b.board_p_no, b.board_group, b.board_order, b.board_depth, b.board_info, b.board_writer, b.board_datetime, b.board_subject, b.board_content,
			u.nickname AS board_nickname, bi.bi_name AS board_name
		FROM tbl_board b
		LEFT JOIN tbl_board_info bi
		ON
			b.board_info = bi.bi_id
		LEFT JOIN tbl_users u
		ON
			b.board_writer = u.username
		WHERE
			b.board_info = #{bi_id}
			AND
			b.board_delete = 0
		ORDER BY b.board_group DESC, b.board_order ASC
		LIMIT 5
	</select>
	
	<select id="selectCategoryByBoard" resultType="categoryVO">
		SELECT *
		FROM tbl_category
		WHERE cate_bi_id = #{board_info}
	</select>
	
	<select id="selectAllBoardInfo" resultType="boardInfoVO">
		SELECT *
		FROM tbl_board_info
	</select>
	
	<select id="findByBoardInfo" resultMap="boardInfoRM">
		SELECT *
		FROM tbl_board_info
		WHERE bi_id = #{bi_id}
	</select>
	
	<resultMap id="boardInfoRM" type="boardInfoVO">
		<id property="bi_id" column="bi_id" />
		<collection property="bi_category" column="bi_id" ofType="categoryVO" select="selectCategoryById" />
	</resultMap>
	
	<select id="selectCategoryById" resultType="categoryVO">
		SELECT *
		FROM tbl_category
		WHERE cate_bi_id = #{bi_id}
	</select>
	
	<select id="maxOrderByBoardGroup" resultType="int">
		SELECT IFNULL(MAX(board_order),0)
		FROM tbl_board
		WHERE board_group = #{board_group}
	</select>
	
	<insert id="insert">
		INSERT INTO tbl_board (
			board_p_no,
			board_group,
			board_order,
			board_depth,
			board_info,
			board_writer,
			board_datetime,
			board_subject,
			board_content,
			board_filename,
			board_category
		) VALUES (
			#{board_p_no},
			#{board_group},
			#{board_order},
			#{board_depth},
			#{board_info},						
			#{board_writer},
			#{db_insert_datetime},
			#{board_subject},
			#{board_content},
			#{board_filename},
			#{board_category}
		)
		<selectKey keyProperty="board_no" resultType="long" order="AFTER">
        	SELECT LAST_INSERT_ID()
    	</selectKey>
	</insert>
	
	<update id="update">
		UPDATE `tbl_board`
		SET
			`board_p_no` = #{board_p_no},
			`board_group` = #{board_group},
			`board_order` = #{board_order},
			`board_depth` = #{board_depth},
			`board_info` = #{board_info},
			`board_writer` = #{board_writer},
			`board_subject` = #{board_subject},
			`board_content` = #{board_content},
			`board_filename` = #{board_filename},
			`board_category` = #{board_category}
		WHERE `board_no` = #{board_no}
	</update>
	
	<update id="update_delete">
		UPDATE tbl_board
		SET
			board_delete = #{board_delete}
		WHERE board_no = #{board_no}
	</update>
	
	<delete id="delete">
		DELETE FROM tbl_board
		WHERE board_no = #{board_no}
	</delete>
</mapper>